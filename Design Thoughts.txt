0. Rover location reports bounds orientation all data
1. Now multiple rovers
2. Select rover at a time (tiers of commands that allow interuption)
3. Rovers check so dont crash
4. Revise design pattern command put notes in the file
5. Revise other relevant design patterns
6. Make changes or just make notes on how would implement:
	*left right sideways movement
	*classes holding own key and all data for setting up the dictionary
	*dictionaries build themselves from children of a class
7. Tidy it up so works smooth english correct
8. Put it online






My understanding of Get Set and this needs revising look at the Location interface and constructor then research

Should build own dictionary still

This is not exactly command pattern could i make it more like it - go back and watch command pattern stuff

LookNorth could be just look if it took an orientation object, 
the type of object could be set in the dictionary but it would then have a different signature

still struggling with open close principle and setting the key presses

trying to make it so only need add class in one place to need it 

if want to do left and right could do an enum for the directions cycle through them and loop round
-maybe next rover

multiple rovers - 1-2-3-4 to set up, check if they are going to crash- next phase


View user interface control the command model the rovers and the positions - could mvc be appplicable?

Commands should have their own key in their class that the dictionary takes, and a description so that the dictionary can get the classes 
and build itself and the keys, it should also be able to when user interface goes through the commands provide a description of what each does

should the rover force checking of valid command sequence in its method to stop later it being called without or because it is not the brain should it just rely on one always being called then the other
I think the answer will be to do with errors and validation

string builder look into

does dictionary adding the to it break open close principle

To add move leftwards and rightwards movement would need to put in a order to NESW with enum or array and then loow if going W to N
Would get current location orientation and use the orientation one less or one more depending if want right or left movement

Need to protect  my fields  more theyre often public rather than private with get set


//CommandFactory is static but if rovers were later required to have different commands
    //I would need to drop the static and give them own dictionaries
    //or make a static command dictionary factory that builds custom dictionaries to initialise
    //rovers with



	Revise (lambda) context this:
	static StaticCommandFactoryDic() {
            var commands = Assembly.GetAssembly(typeof(Command)).GetTypes()
                .Where(myCommand => myCommand.IsClass && !myCommand.IsAbstract && myCommand.IsSubclassOF(typeof(Ability)));
        }

		Is it possible to have a folder and just ask the dictionary to put all classes in the folder into  itself? or a namespace?